/* witregels kunnen code breken */
main:has(section[data-panel='color-combination-checkbox'] input:nth-of-type(1):not(:checked)
	):has(section[data-panel='color-combination-checkbox'] input:nth-of-type(2):checked
	):has(section[data-panel='color-combination-checkbox'] input:nth-of-type(3):not(:checked)
	):has(section[data-panel='color-combination-checkbox'] input:nth-of-type(4):not(:checked)
	):has(section[data-panel='color-combination-checkbox'] input:nth-of-type(5):checked
	):has(section[data-panel='color-combination-checkbox'] input:nth-of-type(6):not(:checked)
	):has(section[data-panel='color-combination-checkbox'] input:nth-of-type(7):not(:checked)
	):has(section[data-panel='color-combination-checkbox'] input:nth-of-type(8):not(:checked)
	):has(section[data-panel='color-combination-checkbox'] input:nth-of-type(9):checked
	):has(section[data-panel='color-combination-checkbox'] input:nth-of-type(10):checked
	
	/* radio buttons section */
	):has(section[data-panel='color-combination-radio'] fieldset:nth-of-type(1) input:first-of-type:checked
	):has(section[data-panel='color-combination-radio'] fieldset:nth-of-type(2) input:last-of-type:checked
	):has(section[data-panel='color-combination-radio'] fieldset:nth-of-type(3) input:first-of-type:checked
	):has(section[data-panel='color-combination-radio'] fieldset:nth-of-type(4) input:first-of-type:checked
	):has(section[data-panel='color-combination-radio'] fieldset:nth-of-type(5) input:last-of-type:checked

	/* range sliders module */
	):has(section[data-panel='double-slider-value'] input:first-of-type[data-value='0']
	):has(section[data-panel='double-slider-value'] input:last-of-type[data-value='20']

	/* input code */
	):has(section[data-panel='input-code'] input:valid
	) section[data-panel='master-switch'] {
	filter: hue-rotate(180deg);

	& input {
		display: initial;
	}

	& label::after {
		pointer-events: initial;
		cursor: pointer;
	}
}

section[data-panel='master-switch'] {
	--bg: #ccc;
	--transition-duration: 1s;
	--full-width: 15em;
	--stick-height: calc(var(--full-width) / 3.75);
	--ball-width: calc(var(--full-width) / 2.5);

	--ball-z: calc(var(--full-width) / 1.875);

	& input {
		display: none;
		appearance: none;

		&:checked + label {
			&::before {
				transform: none;
			}

			&::after {
				transform: rotateX(85deg) translateZ(var(--ball-z)) rotateX(-85deg);
			}
		}
	}

	& label {
		font-size: clamp(0.5em, 2vmin, 0.75em);
		width: var(--full-width);
		aspect-ratio: 1/2;
		isolation: isolate;
		background-color: var(--bg);
		border-radius: 1em;

		/* tekst */
		display: grid;
		place-content: end center;
		padding: 0.5em 0;
		color: black;

		background-image: linear-gradient(to right, #000, #000),
			radial-gradient(circle, #000 2em, transparent 2em),
			radial-gradient(circle, #000 2em, transparent 2em);
		background-size: 4em 6em;
		background-position: center center, center calc(50% - 3.5em), center calc(50% + 3.5em);
		background-repeat: no-repeat;

		place-items: center;
		transform-style: preserve-3d;
		perspective: 40em;
		pointer-events: none;

		&::before,
		&::after {
			content: '';
			position: absolute;
			transition: transform var(--transition-duration) ease-out;
		}
		/***********/
		/* DE STAF */
		/***********/
		&::before {
			bottom: calc(50% + 2em);
			height: var(--stick-height);
			aspect-ratio: 2/4;
			background: silver;
			transform-origin: center calc(100% + calc(var(--stick-height) / 2));

			border-radius: 0 0 50% 50% / 0 0 0.75em 0.75em;
			transform: rotateX(-175deg);
		}

		/**********/
		/* DE BAL */
		/**********/
		&::after {
			height: var(--ball-width);
			aspect-ratio: 1/1;
			background-color: #900;
			border-radius: 50%;
			cursor: pointer;
			pointer-events: none;

			transform: rotateX(-85deg) translateZ(var(--ball-z)) rotateX(85deg);
		}
	}

	& input:focus + label {
		color: red;
	}
}
